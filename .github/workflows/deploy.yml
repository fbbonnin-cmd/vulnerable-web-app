name: Deploy Vulnerable Application

on:
  push:
    branches:
      - master

jobs:
  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: npm install

      # --- Escaneo de Seguridad Estática (SAST) ---
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=fbbonnin-cmd_vulnerable-web-app
            -Dsonar.organization=fbbonnin-cmd
            -Dsonar.host.url=https://sonarcloud.io

      - name: Run Snyk to check for vulnerabilities
        # Se restaura a la versión original que funcionaba correctamente
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=package.json
          fail-on-issues: false
        continue-on-error: true

      # --- Construcción de la Imagen y Escaneo de Vulnerabilidades (Trivy) ---
      - name: Build Docker Image
        run: docker build -t vulnerable-web-app .

      - name: Scan Docker Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'vulnerable-web-app:latest'
          format: 'table'
          severity: 'HIGH,CRITICAL'
          exit-code: 0

      # --- Escaneo de Seguridad Dinámico (DAST) ---
      - name: Run Docker Image for ZAP Scan
        run: docker run -d --rm --name webapp -p 8080:3000 vulnerable-web-app
      - name: Debug Docker Container
        run: |
          echo "Inspecting running containers..."
          docker ps
          echo "---"
          echo "Fetching logs from 'webapp' container..."
          docker logs webapp
      - name: Wait for application to start
        run: |
          echo "Waiting for app to be ready on http://localhost:8080..."
          MAX_RETRIES=20
          RETRY_COUNT=0
          while ! curl --silent --fail http://localhost:8080; do
            echo "App is not ready yet. Waiting 5 seconds..."
            sleep 5
            RETRY_COUNT=$((RETRY_COUNT+1))
            if [ $RETRY_COUNT -ge $MAX_RETRIES ]; then
              echo "Timeout: App did not start within the expected time."
              exit 1
            fi
          done
          echo "App is ready. Starting ZAP scan."
      - name: ZAP Full Scan
        # Eliminamos el token para evitar el error de creación de issues.
        uses: zaproxy/action-full-scan@v0.12.0
        with:
          target: 'http://localhost:8080'
          # Deshabilitamos la escritura de issues para evitar el error.
          allow_issue_writing: false

      - name: Publish ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: ZAP-Report
          path: report_html.html

      - name: Stop ZAP Test Container
        if: always()
        run: docker stop webapp

      # --- Despliegue Final en Heroku ---
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "vulnerable-web-app-francisco"
          heroku_email: "fb.bonnin@gmail.com"
          remote_branch: "master"
          usedocker: true
