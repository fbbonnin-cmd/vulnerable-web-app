name: Deploy Vulnerable Application
on:
  push:
    branches:
      - master
jobs:
  deploy-heroku:
    name: Deploy Heroku
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies
        run: npm install
      # --- Escaneo de Seguridad Est치tica (SAST) ---
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=fbbonnin-cmd_vulnerable-web-app
            -Dsonar.organization=fbbonnin-cmd
            -Dsonar.host.url=https://sonarcloud.io
      - name: Install Heroku CLI
        run: |
          curl https://cli-assets.heroku.com/install.sh | sh 
      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --file=package.json
          fail-on-issues: false
          fail-on-threshold: false
        continue-on-error: true
      # --- Construcci칩n de la Imagen
      - name: Build Docker Image
        run: docker build -t vulnerable-web-app .
      # --- Escaneo de Seguridad Din치mico (DAST) ---
      - name: Run Docker Image for ZAP Scan
        run: docker run -d --rm --name webapp -p 8080:3000 vulnerable-web-app
      - name: ZAP Full Scan
        uses: owasp-zap/zap-action@v2 # <-- Versi칩n corregida
        with:
          target: 'http://localhost:8080'
          zap_scan_type: 'full-scan'
      - name: Publish ZAP Report
        uses: actions/upload-artifact@v4 # <-- Actualizado
        with:
          name: ZAP-Report
          path: zap-report.html
      - name: Deploy to Heroku
        uses: akhileshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: "vulnerable-web-app-francisco"
          heroku_email: "fb.bonnin@gmail.com"
          remote_branch: "master"
          usedocker: true
